    def testCode(self, specified_date=None):
        # Initialize date to None if not specified
        date = specified_date
        
        # Dictionary to store log files
        log_files = {}
        
        # Get all logs (package list)
        base_url = 'https://qdlp2bcmapp0002.ess.fiserv.one/mvcm-api/logs'
        resp = self.controller.mvcm.getalllogs(base_url)
        
        # Parse the response to get the packages
        if hasattr(resp, 'text'):
            packages = json.loads(resp.text)
        else:
            # Assuming resp is already the parsed JSON
            packages = resp
        
        # If date is None, set it to today's date in the correct format
        if date is None:
            date = datetime.now().strftime('%Y-%m-%d')
        
        # Iterate through each package
        for i, package in enumerate(packages, 1):
            package_name = package.get('name')
            
            # Process each log file in the package
            log_files_array = package.get('logFiles', [])
            
            for log_file in log_files_array:
                name = log_file.get('name')
                parent = log_file.get('parent')
                date_modified = log_file.get('dateModified')
                
                # Check if the log was modified on or after the specified date
                if date_modified and date_modified >= date:
                    # Download the specific log file
                    download_url = f'{base_url}/download/{i}/{parent}/{name}'
                    download_resp = self.controller.mvcm.getalllogs(download_url)
                    
                    # Get the log content
                    if hasattr(download_resp, 'text'):
                        log_content = download_resp.text
                    else:
                        # If download_resp is already the content
                        log_content = download_resp
                    
                    # Store the log content in the dictionary
                    log_files[name] = log_content
        
        return log_files
